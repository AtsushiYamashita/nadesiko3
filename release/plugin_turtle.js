/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};

/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {

/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId])
/******/ 			return installedModules[moduleId].exports;

/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};

/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);

/******/ 		// Flag the module as loaded
/******/ 		module.l = true;

/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}


/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;

/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;

/******/ 	// identity function for calling harmony imports with the correct context
/******/ 	__webpack_require__.i = function(value) { return value; };

/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, {
/******/ 				configurable: false,
/******/ 				enumerable: true,
/******/ 				get: getter
/******/ 			});
/******/ 		}
/******/ 	};

/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};

/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };

/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";

/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 5);
/******/ })
/************************************************************************/
/******/ ({

/***/ 5:
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\n/**\n * Turtle Graphics for Web browser (nadesiko3)\n * plugin_turtle.js\n */\n\nvar PluginTurtle = {\n    \"初期化\": {\n        type: \"func\", josi: [],\n        fn: function fn(sys) {\n            if (sys._turtle) return;\n            sys._turtle = {\n                list: [],\n                target: -1,\n                ctx: null,\n                canvas: null,\n                canvas_r: { left: 0, top: 0, width: 640, height: 400 },\n                clearAll: function clearAll() {\n                    var me = this;\n                    console.log('[TURTLE] clearAll');\n                    for (var i = 0; i < me.list.length; i++) {\n                        var tt = me.list[i];\n                        tt.mlist = []; // ジョブをクリア\n                        document.body.removeChild(tt.canvas);\n                    }\n                    me.list = [];\n                    if (me.canvas != null) {\n                        me.ctx.clearRect(0, 0, me.canvas.width, me.canvas.height);\n                    }\n                    me.target = -1;\n                    me.b_set_timer = false;\n                },\n                drawTurtle: function drawTurtle(id) {\n                    var tt = this.list[id];\n                    var cr = this.canvas_r;\n                    // カメの位置を移動\n                    tt.canvas.style.left = cr.left + tt.x - tt.cx + \"px\";\n                    tt.canvas.style.top = cr.top + tt.y - tt.cx + \"px\";\n                    if (!tt.f_update) return;\n                    if (!tt.f_loaded) return;\n                    tt.f_update = false;\n                    tt.ctx.clearRect(0, 0, tt.canvas.width, tt.canvas.height);\n                    if (!tt.f_visible) return;\n                    if (tt.dir != 270) {\n                        var rad = (tt.dir + 90) * 0.017453292519943295;\n                        tt.ctx.save();\n                        tt.ctx.translate(tt.cx, tt.cy);\n                        tt.ctx.rotate(rad);\n                        tt.ctx.translate(-tt.cx, -tt.cy);\n                        tt.ctx.drawImage(tt.img, 0, 0);\n                        tt.ctx.restore();\n                    } else {\n                        tt.ctx.drawImage(tt.img, 0, 0);\n                    }\n                },\n                getCur: function getCur() {\n                    if (this.list.length == 0) {\n                        throw Error(\"最初に『カメ作成』命令を呼び出してください。\");\n                    }\n                    return this.list[this.target];\n                },\n                b_set_timer: false,\n                set_timer: function set_timer() {\n                    var _this = this;\n\n                    if (this.b_set_timer) return;\n                    this.b_set_timer = true;\n                    setTimeout(function () {\n                        var tt = _this.getCur();\n                        console.log(\"[TURTLE] Let's go! job=\", tt.mlist.length);\n                        sys._turtle.play();\n                    }, 1);\n                },\n                line: function line(tt, x1, y1, x2, y2) {\n                    if (tt) {\n                        if (tt.f_down == false) return;\n                    }\n                    var ctx = this.ctx;\n                    ctx.beginPath();\n                    ctx.lineWidth = tt.lineWidth;\n                    ctx.strokeStyle = tt.color;\n                    ctx.moveTo(x1, y1);\n                    ctx.lineTo(x2, y2);\n                    ctx.stroke();\n                },\n                do_macro: function do_macro(tt, wait) {\n                    var me = this;\n                    if (!tt.f_loaded && wait > 0) {\n                        console.log('[TURTLE] waiting ...');\n                        return true;\n                    }\n                    var m = tt.mlist.shift();\n                    var cmd = m[0];\n                    switch (cmd) {\n                        case \"mv\":\n                            // 線を引く\n                            me.line(tt, tt.x, tt.y, m[1], m[2]);\n                            // カメの角度を変更\n                            var mv_rad = Math.atan2(m[1] - tt.x, m[2] - tt.y);\n                            tt.dir = mv_rad * 57.29577951308232;\n                            tt.f_update = true;\n                            // 実際に位置を移動\n                            tt.x = m[1];\n                            tt.y = m[2];\n                            break;\n                        case \"fd\":\n                            var fdv = m[1] * m[2];\n                            var rad = tt.dir * 0.017453292519943295;\n                            var x2 = tt.x + Math.cos(rad) * fdv;\n                            var y2 = tt.y + Math.sin(rad) * fdv;\n                            me.line(tt, tt.x, tt.y, x2, y2);\n                            tt.x = x2;\n                            tt.y = y2;\n                            break;\n                        case \"angle\":\n                            var angle = m[1];\n                            tt.dir = (angle - 90 + 360) % 360;\n                            tt.f_update = true;\n                            break;\n                        case \"rotr\":\n                            var rv = m[1];\n                            tt.dir = (tt.dir + rv) % 360;\n                            tt.f_update = true;\n                            break;\n                        case \"rotl\":\n                            var lv = m[1];\n                            tt.dir = (tt.dir - lv + 360) % 360;\n                            tt.f_update = true;\n                            break;\n                        case \"color\":\n                            // ctx.strokeStyle = m[1];\n                            tt.color = m[1];\n                            break;\n                        case \"size\":\n                            // ctx.lineWidth = m[1];\n                            tt.lineWidth = m[1];\n                            break;\n                        case \"pen_on\":\n                            tt.f_down = m[1];\n                            break;\n                        case \"visible\":\n                            tt.f_visible = m[1];\n                            tt.f_update = true;\n                            break;\n                        case \"change_image\":\n                            tt.f_loaded = false;\n                            tt.img.src = m[1];\n                            break;\n                    }\n                    if (tt.f_loaded) sys._turtle.drawTurtle(tt.id);\n                    return tt.mlist.length > 0;\n                },\n                do_macro_all: function do_macro_all(wait) {\n                    var has_next = false;\n                    for (var i = 0; i < sys._turtle.list.length; i++) {\n                        var tt = sys._turtle.list[i];\n                        if (this.do_macro(tt, wait)) has_next = true;\n                    }\n                    return has_next;\n                },\n                play: function play() {\n                    var me = this;\n                    var wait = sys.__getSysValue(\"カメ速度\", 100);\n                    var has_next = true;\n                    while (has_next) {\n                        has_next = this.do_macro_all(wait);\n                        if (wait > 0) break;\n                    }\n                    if (wait > 0 && has_next) {\n                        setTimeout(function () {\n                            me.play();\n                        }, wait);\n                        return;\n                    }\n                    console.log(\"[TURTLE] finished.\");\n                }\n            };\n        }\n    },\n    /// タートルグラフィックス/カメ操作\n    \"カメ作成\": { /// タートルグラフィックスを開始してカメのIDを返す /// かめさくせい\n        type: \"func\", josi: [],\n        fn: function fn(sys) {\n            // カメの情報を sys._turtle リストに追加\n            var id = sys._turtle.list.length;\n            var tt = {\n                id: id,\n                img: null,\n                canvas: null,\n                ctx: null,\n                dir: 270, // 上向き\n                cx: 32,\n                cy: 32,\n                x: 0,\n                y: 0,\n                color: 'black',\n                lineWidth: 4,\n                f_down: true,\n                f_update: true,\n                f_loaded: false,\n                f_visible: true,\n                mlist: []\n            };\n            sys._turtle.list.push(tt);\n            sys._turtle.target = id;\n            // 画像を読み込む\n            tt.img = document.createElement('img');\n            tt.canvas = document.createElement('canvas');\n            tt.ctx = tt.canvas.getContext('2d');\n            tt.canvas.id = id;\n            tt.img.src = sys.__getSysValue(\"カメ画像URL\", \"turtle.png\");\n            tt.img.onload = function () {\n                tt.cx = tt.img.width / 2;\n                tt.cy = tt.img.height / 2;\n                tt.canvas.width = tt.img.width;\n                tt.canvas.height = tt.img.height;\n                tt.f_loaded = true;\n                sys._turtle.drawTurtle(tt.id);\n                console.log(\"turtle.onload\");\n            };\n            tt.img.onerror = function () {\n                console.log(\"カメの読み込みに失敗\");\n                tt.f_loaded = true;\n                tt.f_visible = false;\n                sys._turtle.drawTurtle(tt.id);\n            };\n            tt.canvas.style.position = \"absolute\";\n            document.body.appendChild(tt.canvas);\n            // 描画先をセットする\n            var canvas_id = sys.__getSysValue(\"カメ描画先\", \"turtle_cv\");\n            console.log(\"カメ描画先=\", canvas_id, sys.__varslist[0][\"カメ描画先\"]);\n            var cv = sys._turtle.canvas = document.getElementById(canvas_id);\n            if (!sys._turtle.canvas) {\n                console.log(\"[ERROR] カメ描画先が見当たりません。\" + canvas_id);\n                return;\n            }\n            var ctx = sys._turtle.ctx = sys._turtle.canvas.getContext('2d');\n            ctx.lineWidth = 4;\n            ctx.strokeStyle = \"black\";\n            ctx.lineCap = \"round\";\n            var rect = cv.getBoundingClientRect();\n            var rx = rect.left + window.pageXOffset;\n            var ry = rect.top + window.pageYOffset;\n            var cr = sys._turtle.canvas_r = {\n                \"left\": rx, \"top\": ry,\n                width: rect.width, height: rect.height\n            };\n            // デフォルト位置の設定\n            tt.x = rect.width / 2;\n            tt.y = rect.height / 2;\n            return id;\n        }\n    },\n    \"カメ操作対象設定\": { /// IDを指定して操作対象となるカメを変更する /// かめそうさたいしょうせってい\n        type: \"func\", josi: [[\"に\", \"へ\", \"の\"]],\n        fn: function fn(id, sys) {\n            sys._turtle.target = id;\n        },\n        return_none: true\n    },\n    \"カメ描画先\": { type: \"var\", value: \"turtle_cv\" }, /// かめびょうがさき\n    \"カメ画像URL\": { type: \"var\", value: \"turtle.png\" }, /// かめがぞうURL\n    \"カメ画像変更\": { /// カメの画像をURLに変更する /// かめがぞうへんこう\n        type: \"func\", josi: [[\"に\", \"へ\"]],\n        fn: function fn(url, sys) {\n            var tt = sys._turtle.getCur();\n            tt.mlist.push([\"change_image\", url]);\n            sys._turtle.set_timer();\n        },\n        return_none: true\n    },\n    \"カメ速度\": { type: \"const\", value: 100 }, /// かめそくど\n    \"カメ速度設定\": { /// カメの動作速度vに設定(大きいほど遅い) /// かめそくどせってい\n        type: \"func\", josi: [[\"に\", \"へ\"]],\n        fn: function fn(v, sys) {\n            sys.__varslist[0][\"カメ速度\"] = v;\n        }\n    },\n    \"カメ移動\": { /// カメの位置を[x,y]へ移動する /// かめいどう\n        type: \"func\", josi: [[\"に\", \"へ\"]],\n        fn: function fn(xy, sys) {\n            var tt = sys._turtle.getCur();\n            tt.mlist.push([\"mv\", xy[0], xy[1]]);\n            sys._turtle.set_timer();\n        },\n        return_none: true\n    },\n    \"カメ進\": { /// カメの位置をVだけ進める /// かめすすむ\n        type: \"func\", josi: [[\"だけ\"]],\n        fn: function fn(v, sys) {\n            var tt = sys._turtle.getCur();\n            tt.mlist.push([\"fd\", v, 1]);\n            sys._turtle.set_timer();\n        },\n        return_none: true\n    },\n    \"カメ戻\": { /// カメの位置をVだけ戻す /// かめもどる\n        type: \"func\", josi: [[\"だけ\"]],\n        fn: function fn(v, sys) {\n            var tt = sys._turtle.getCur();\n            tt.mlist.push([\"fd\", v, -1]);\n            sys._turtle.set_timer();\n        },\n        return_none: true\n    },\n    \"カメ角度設定\": { /// カメの向きをDEGに設定する /// かめかくどせってい\n        type: \"func\", josi: [[\"に\", \"へ\", \"の\"]],\n        fn: function fn(v, sys) {\n            var tt = sys._turtle.getCur();\n            tt.mlist.push([\"angle\", parseFloat(v)]);\n            sys._turtle.set_timer();\n        },\n        return_none: true\n    },\n    \"カメ右回転\": { /// カメの向きをDEGだけ右に向ける /// かめみぎかいてん\n        type: \"func\", josi: [[\"だけ\"]],\n        fn: function fn(v, sys) {\n            var tt = sys._turtle.getCur();\n            tt.mlist.push([\"rotr\", v]);\n            sys._turtle.set_timer();\n        },\n        return_none: true\n    },\n    \"カメ左回転\": { /// カメの向きをDEGだけ左に向ける /// かめひだりかいてん\n        type: \"func\", josi: [[\"だけ\"]],\n        fn: function fn(v, sys) {\n            var tt = sys._turtle.getCur();\n            tt.mlist.push([\"rotl\", v]);\n            sys._turtle.set_timer();\n        },\n        return_none: true\n    },\n    \"カメペン色設定\": { /// カメのペン描画色をCに設定する /// かめぺんいろせってい\n        type: \"func\", josi: [[\"に\", \"へ\"]],\n        fn: function fn(c, sys) {\n            var tt = sys._turtle.getCur();\n            tt.mlist.push([\"color\", c]);\n            sys._turtle.set_timer();\n        },\n        return_none: true\n    },\n    \"カメペンサイズ設定\": { /// カメペンのサイズをWに設定する /// かめぺんさいずせってい\n        type: \"func\", josi: [[\"に\", \"へ\"]],\n        fn: function fn(w, sys) {\n            var tt = sys._turtle.getCur();\n            tt.mlist.push([\"size\", w]);\n            sys._turtle.set_timer();\n        }\n    },\n    \"カメペン設定\": { /// カメペンを使うかどうかをV(オン/オフ)に設定する /// かめぺんせってい\n        type: \"func\", josi: [[\"に\", \"へ\"]],\n        fn: function fn(w, sys) {\n            var tt = sys._turtle.getCur();\n            tt.mlist.push([\"pen_on\", w]);\n            sys._turtle.set_timer();\n        }\n    },\n    \"カメ全消去\": { /// 表示しているカメと描画内容を全部消去する /// かめぜんしょうきょ\n        type: \"func\", josi: [],\n        fn: function fn(sys) {\n            sys._turtle.clearAll();\n        },\n        return_none: true\n    },\n    \"カメ非表示\": { /// カメの画像を非表示にする。描画に影響しない。 /// かめひひょうじ\n        type: \"func\", josi: [],\n        fn: function fn(sys) {\n            var tt = sys._turtle.getCur();\n            tt.mlist.push([\"visible\", false]);\n            sys._turtle.set_timer();\n        },\n        return_none: true\n    },\n    \"カメ表示\": { /// 非表示にしたカメを表示する。 /// かめひょうじ\n        type: \"func\", josi: [],\n        fn: function fn(sys) {\n            var tt = sys._turtle.getCur();\n            tt.mlist.push([\"visible\", true]);\n            sys._turtle.set_timer();\n        },\n        return_none: true\n    }\n};\n\nmodule.exports = PluginTurtle;\n\n// scriptタグで取り込んだ時、自動で登録する\nif ((typeof navigator === \"undefined\" ? \"undefined\" : _typeof(navigator)) == \"object\") {\n    navigator.nako3.addPluginObject(\"PluginTurtle\", PluginTurtle);\n}//# sourceMappingURL=data:application/json;charset=utf-8;base64,");

/***/ })

/******/ });